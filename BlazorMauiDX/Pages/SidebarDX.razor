@page "/SidebarDX"

@using Microsoft.AspNetCore.Components
@using Radzen
@inherits LayoutComponentBase

<RadzenLayout>
<RadzenHeader>
    <ChildContent>
        <div class="row justify-content-start align-items-center">
            <div class="col-5 d-flex align-items-center">
                <RadzenSidebarToggle Click="@(args => { sidebarExpanded = !sidebarExpanded; bodyExpanded = !bodyExpanded; })">
                </RadzenSidebarToggle>
                <RadzenLabel Text="Your Logo" style="overflow: hidden; white-space: nowrap; text-overflow: ellipsis;">
                </RadzenLabel>
            </div>
            <div class="col-7 d-flex align-items-center justify-content-end">
                <a href="https://github.com/radzenhq/radzen-blazor" title="GitHub" target="_blank" class="mx-3">
                    <svg width="24" height="24" viewBox="0 0 512 499.36" xmlns="http://www.w3.org/2000/svg">
                    <title>GitHub</title>
                    <path fill="currentColor" fill-rule="evenodd" d="M256 0C114.64 0 0 114.61 0 256c0 113.09 73.34 209 175.08 242.9 12.8 2.35 17.47-5.56 17.47-12.34 0-6.08-.22-22.18-.35-43.54-71.2 15.49-86.2-34.34-86.2-34.34-11.64-29.57-28.42-37.45-28.42-37.45-23.27-15.84 1.73-15.55 1.73-15.55 25.69 1.81 39.21 26.38 39.21 26.38 22.84 39.12 59.92 27.82 74.5 21.27 2.33-16.54 8.94-27.82 16.25-34.22-56.84-6.43-116.6-28.43-116.6-126.49 0-27.95 10-50.8 26.35-68.69-2.63-6.48-11.42-32.5 2.51-67.75 0 0 21.49-6.88 70.4 26.24a242.65 242.65 0 0 1 128.18 0c48.87-33.13 70.33-26.24 70.33-26.24 14 35.25 5.18 61.27 2.55 67.75 16.41 17.9 26.31 40.75 26.31 68.69 0 98.35-59.85 120-116.88 126.32 9.19 7.9 17.38 23.53 17.38 47.41 0 34.22-.31 61.83-.31 70.23 0 6.85 4.61 14.81 17.6 12.31C438.72 464.97 512 369.08 512 256.02 512 114.62 397.37 0 256 0z"></path>
                    </svg>
                </a>
            </div>
        </div>
    </ChildContent>
</RadzenHeader>
<RadzenBody @ref="@body0" @bind-Expanded="@bodyExpanded">
    <ChildContent>
        <RadzenContentContainer>
                <DxTabs @ref="TabComponent" RenderMode="TabsRenderMode.AllTabs" ScrollMode="TabsScrollMode.Auto">
                    @foreach (var x in dxTabs)
                    {
                        <DxTabPage ChildContent="x.ChildContent">
                            <TextTemplate>
                                <div class="row">
                                    <div class="col-lg-10">@x.TextTemplate</div>
                                    <div class="col-lg-2">
                                        <DxButton IconCssClass="oi oi-circle-x"
                                              RenderStyle="ButtonRenderStyle.Link"
                                              RenderStyleMode="ButtonRenderStyleMode.Text"
                                              IconPosition="ButtonIconPosition.AfterText"
                                              CssClass="shadow-none"
                                              Click="() => RemoveTab(x.Id)" />
                                    </div>
                                </div>
                            </TextTemplate>
                        </DxTabPage>
                    }
                </DxTabs>
        </RadzenContentContainer>
    </ChildContent>
</RadzenBody>
<RadzenSidebar @ref="@sidebar0" @bind-Expanded="@sidebarExpanded" class="demos-sidebar" style="display: flex; flex-direction: column; background-color:lightgray;">
    <div style="padding: 1rem">
        <RadzenTextBox Placeholder="Cari..." type="search" @oninput="@FilterPanelMenu" style="width: 100%" />
    </div>
    <div>
        <RadzenPanelMenu Match="NavLinkMatch.Prefix" Click="@PanelMenuClick" Style="background-color:lightgray; color:black;">
            @foreach (var menu in _daftarMenu)
            {
                <RadzenPanelMenuItem Style="border:none;" Text="@menu.Title" Icon="line_weight">
                @if (menu.SubMenu != null)
                {
                    @foreach (var submenu in menu.SubMenu)
                    {
                      <RadzenPanelMenuItem Text="@submenu.Title" Value="@submenu.Category" Style="color:white;background-color:gray !important"></RadzenPanelMenuItem>
                    }
                }
                </RadzenPanelMenuItem>
            }
        </RadzenPanelMenu>
    </div>
</RadzenSidebar>
</RadzenLayout>

<style>

</style>
@code {
    RadzenSidebar sidebar0 = new();
    RadzenBody body0 = new ();
    bool sidebarExpanded = true;
    bool bodyExpanded = false;

    List<Menu> _daftarMenu = new();
    List<Menu> _subMenu = new();
    protected override async Task OnInitializedAsync()
    {
        try
        {
        _subMenu.Add(new Menu{Title = "Con Master Default", Category = "SubMenu", cpPage =@<FetchData></FetchData> });
        _subMenu.Add(new Menu { Title = "Con Master Custom", Category = "SubMenu", cpPage =@<Counter></Counter>});
        _daftarMenu.Add(new Menu { Title = "Con Master",Category="Menu", SubMenu = _subMenu });
        }
        catch (Exception ex)
        {

            var x = ex.Message;
        }

    }

    void FilterPanelMenu(ChangeEventArgs args)
    {
        var term = args.Value.ToString();
    }
    DxTabs TabComponent = new();
    public List<DxTabPage> dxTabs { get; set; } = new();
    void PanelMenuClick(Radzen.MenuItemEventArgs args)
    {
        if (args.Value == "SubMenu")
        {
            var data = _subMenu.FirstOrDefault(e => e.Title == args.Text);
            var tab = new DxTabPage()
            {
                        Id = data.Title,
                        TextTemplate =@<p>Test @data.Title</p>,
                        ChildContent = data.cpPage,
            };
            dxTabs.Add(tab);
            StateHasChanged();
        }
    }
    void RemoveTab(string id)
    {
        var tab = dxTabs.FirstOrDefault(x => x.Id == id);
        dxTabs.Remove(tab);
    }
    public class Menu
    {

        public string Title { get; set; } = string.Empty;
        public string Icon { get; set; } = string.Empty;
        public RenderFragment cpPage { get; set; }
        public string Category { get; set; } = string.Empty;
        public IEnumerable<Menu> SubMenu { get; set; }
    }
}